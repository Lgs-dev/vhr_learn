{"remainingRequest":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\babel-loader\\lib\\index.js!D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\store\\index.js","dependencies":[{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\store\\index.js","mtime":1616999613893},{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616998980398},{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\babel-loader\\lib\\index.js","mtime":1616999009406}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport { Notification } from 'element-ui';\nimport { getRequest } from \"../utils/api\";\nimport \"../utils/stomp\";\nimport \"../utils/sockjs\";\nVue.use(Vuex);\nvar now = new Date();\nvar store = new Vuex.Store({\n  state: {\n    routes: [],\n    sessions: {},\n    hrs: [],\n    currentSession: null,\n    currentHr: JSON.parse(window.sessionStorage.getItem(\"user\")),\n    filterKey: '',\n    stomp: null,\n    isDot: {}\n  },\n  mutations: {\n    INIT_CURRENTHR: function INIT_CURRENTHR(state, hr) {\n      state.currentHr = hr;\n    },\n    initRoutes: function initRoutes(state, data) {\n      state.routes = data;\n    },\n    changeCurrentSession: function changeCurrentSession(state, currentSession) {\n      Vue.set(state.isDot, state.currentHr.username + '#' + currentSession.username, false);\n      state.currentSession = currentSession;\n    },\n    addMessage: function addMessage(state, msg) {\n      var mss = state.sessions[state.currentHr.username + '#' + msg.to];\n\n      if (!mss) {\n        // state.sessions[state.currentHr.username+'#'+msg.to] = [];\n        Vue.set(state.sessions, state.currentHr.username + '#' + msg.to, []);\n      }\n\n      state.sessions[state.currentHr.username + '#' + msg.to].push({\n        content: msg.content,\n        date: new Date(),\n        self: !msg.notSelf\n      });\n    },\n    INIT_DATA: function INIT_DATA(state) {\n      //浏览器本地的历史聊天记录可以在这里完成\n      var data = localStorage.getItem('vue-chat-session');\n\n      if (data) {\n        state.sessions = JSON.parse(data);\n      }\n    },\n    INIT_HR: function INIT_HR(state, data) {\n      state.hrs = data;\n    }\n  },\n  actions: {\n    connect: function connect(context) {\n      context.state.stomp = Stomp.over(new SockJS('/ws/ep'));\n      context.state.stomp.connect({}, function (success) {\n        context.state.stomp.subscribe('/user/queue/chat', function (msg) {\n          var receiveMsg = JSON.parse(msg.body);\n\n          if (!context.state.currentSession || receiveMsg.from != context.state.currentSession.username) {\n            Notification.info({\n              title: '【' + receiveMsg.fromNickname + '】发来一条消息',\n              message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\n              position: 'bottom-right'\n            });\n            Vue.set(context.state.isDot, context.state.currentHr.username + '#' + receiveMsg.from, true);\n          }\n\n          receiveMsg.notSelf = true;\n          receiveMsg.to = receiveMsg.from;\n          context.commit('addMessage', receiveMsg);\n        });\n      }, function (error) {});\n    },\n    initData: function initData(context) {\n      context.commit('INIT_DATA');\n      getRequest(\"/chat/hrs\").then(function (resp) {\n        if (resp) {\n          context.commit('INIT_HR', resp);\n        }\n      });\n    }\n  }\n});\nstore.watch(function (state) {\n  return state.sessions;\n}, function (val) {\n  localStorage.setItem('vue-chat-session', JSON.stringify(val));\n}, {\n  deep: true\n  /*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\n\n});\nexport default store;",{"version":3,"sources":["D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\store\\index.js"],"names":["Vue","Vuex","Notification","getRequest","use","now","Date","store","Store","state","routes","sessions","hrs","currentSession","currentHr","JSON","parse","window","sessionStorage","getItem","filterKey","stomp","isDot","mutations","INIT_CURRENTHR","hr","initRoutes","data","changeCurrentSession","set","username","addMessage","msg","mss","to","push","content","date","self","notSelf","INIT_DATA","localStorage","INIT_HR","actions","connect","context","Stomp","over","SockJS","success","subscribe","receiveMsg","body","from","info","title","fromNickname","message","length","substr","position","commit","error","initData","then","resp","watch","val","setItem","stringify","deep"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport { Notification } from 'element-ui';\r\nimport {getRequest} from \"../utils/api\";\r\nimport '../utils/stomp'\r\nimport '../utils/sockjs'\r\n\r\nVue.use(Vuex)\r\n\r\nconst now = new Date();\r\n\r\nconst store = new Vuex.Store({\r\n    state: {\r\n        routes: [],\r\n        sessions: {},\r\n        hrs: [],\r\n        currentSession: null,\r\n        currentHr: JSON.parse(window.sessionStorage.getItem(\"user\")),\r\n        filterKey: '',\r\n        stomp: null,\r\n        isDot: {}\r\n    },\r\n    mutations: {\r\n        INIT_CURRENTHR(state, hr) {\r\n            state.currentHr = hr;\r\n        },\r\n        initRoutes(state, data) {\r\n            state.routes = data;\r\n        },\r\n        changeCurrentSession(state, currentSession) {\r\n            Vue.set(state.isDot, state.currentHr.username + '#' + currentSession.username, false);\r\n            state.currentSession = currentSession;\r\n        },\r\n        addMessage(state, msg) {\r\n            let mss = state.sessions[state.currentHr.username + '#' + msg.to];\r\n            if (!mss) {\r\n                // state.sessions[state.currentHr.username+'#'+msg.to] = [];\r\n                Vue.set(state.sessions, state.currentHr.username + '#' + msg.to, []);\r\n            }\r\n            state.sessions[state.currentHr.username + '#' + msg.to].push({\r\n                content: msg.content,\r\n                date: new Date(),\r\n                self: !msg.notSelf\r\n            })\r\n        },\r\n        INIT_DATA(state) {\r\n            //浏览器本地的历史聊天记录可以在这里完成\r\n            let data = localStorage.getItem('vue-chat-session');\r\n            if (data) {\r\n                state.sessions = JSON.parse(data);\r\n            }\r\n        },\r\n        INIT_HR(state, data) {\r\n            state.hrs = data;\r\n        }\r\n    },\r\n    actions: {\r\n        connect(context) {\r\n            context.state.stomp = Stomp.over(new SockJS('/ws/ep'));\r\n            context.state.stomp.connect({}, success => {\r\n                context.state.stomp.subscribe('/user/queue/chat', msg => {\r\n                    let receiveMsg = JSON.parse(msg.body);\r\n                    if (!context.state.currentSession || receiveMsg.from != context.state.currentSession.username) {\r\n                        Notification.info({\r\n                            title: '【' + receiveMsg.fromNickname + '】发来一条消息',\r\n                            message: receiveMsg.content.length > 10 ? receiveMsg.content.substr(0, 10) : receiveMsg.content,\r\n                            position: 'bottom-right'\r\n                        })\r\n                        Vue.set(context.state.isDot, context.state.currentHr.username + '#' + receiveMsg.from, true);\r\n                    }\r\n                    receiveMsg.notSelf = true;\r\n                    receiveMsg.to = receiveMsg.from;\r\n                    context.commit('addMessage', receiveMsg);\r\n                })\r\n            }, error => {\r\n\r\n            })\r\n        },\r\n        initData(context) {\r\n            context.commit('INIT_DATA')\r\n            getRequest(\"/chat/hrs\").then(resp => {\r\n                if (resp) {\r\n                    context.commit('INIT_HR', resp);\r\n                }\r\n            })\r\n        }\r\n    }\r\n})\r\n\r\nstore.watch(function (state) {\r\n    return state.sessions\r\n}, function (val) {\r\n    localStorage.setItem('vue-chat-session', JSON.stringify(val));\r\n}, {\r\n    deep: true/*这个貌似是开启watch监测的判断,官方说明也比较模糊*/\r\n})\r\n\r\n\r\nexport default store;"]}]}