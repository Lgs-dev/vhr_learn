{"remainingRequest":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\babel-loader\\lib\\index.js!D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\utils\\api.js","dependencies":[{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\utils\\api.js","mtime":1617010589452},{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1616998980398},{"path":"D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\node_modules\\babel-loader\\lib\\index.js","mtime":1616999009406}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport axios from 'axios';\nimport { Message } from 'element-ui';\nimport router from \"../router\";\nimport { mymessage } from '@/utils/mymessage';\naxios.interceptors.response.use(function (success) {\n  if (success.status && success.status == 200 && success.data.status == 500) {\n    Message.error({\n      message: success.data.msg\n    });\n    return;\n  }\n\n  if (success.data.msg) {\n    //打印登录成功信息\n    Message.success({\n      message: success.data.msg\n    });\n  }\n\n  return success.data;\n}, function (error) {\n  if (error.response.status == 504 || error.response.status == 404) {\n    Message.error({\n      message: '服务器被吃了( ╯□╰ )'\n    });\n  } else if (error.response.status == 403) {\n    Message.error({\n      message: '权限不足，请联系管理员'\n    });\n  } else if (error.response.status == 401) {\n    mymessage.error({\n      message: error.response.data.msg ? error.response.data.msg : '尚未登录，请登录'\n    });\n    router.replace('/');\n  } else {\n    if (error.response.data.msg) {\n      Message.error({\n        message: error.response.data.msg\n      });\n    } else {\n      Message.error({\n        message: '未知错误!'\n      });\n    }\n  }\n\n  return;\n});\nvar base = '';\nexport var postKeyValueRequest = function postKeyValueRequest(url, params) {\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params,\n    transformRequest: [function (data) {\n      var ret = '';\n\n      for (var i in data) {\n        ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&';\n      }\n\n      return ret;\n    }],\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n};\nexport var postRequest = function postRequest(url, params) {\n  return axios({\n    method: 'post',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};\nexport var putRequest = function putRequest(url, params) {\n  return axios({\n    method: 'put',\n    url: \"\".concat(base).concat(url),\n    data: params\n  });\n};\nexport var getRequest = function getRequest(url, params) {\n  return axios({\n    method: 'get',\n    url: \"\".concat(base).concat(url),\n    params: params\n  });\n};\nexport var deleteRequest = function deleteRequest(url, params) {\n  return axios({\n    method: 'delete',\n    url: \"\".concat(base).concat(url),\n    params: params\n  });\n};",{"version":3,"sources":["D:\\百度网盘\\Spring Boot+Vue全栈开发实战\\test_code\\chapter16\\vuehr\\src\\utils\\api.js"],"names":["axios","Message","router","mymessage","interceptors","response","use","success","status","data","error","message","msg","replace","base","postKeyValueRequest","url","params","method","transformRequest","ret","i","encodeURIComponent","headers","postRequest","putRequest","getRequest","deleteRequest"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport {Message} from 'element-ui';\r\nimport router from '../router'\r\nimport {mymessage} from '@/utils/mymessage';\r\n\r\naxios.interceptors.response.use(success => {\r\n    if (success.status && success.status == 200 && success.data.status == 500) {\r\n        Message.error({message: success.data.msg})\r\n        return;\r\n    }\r\n    if (success.data.msg) {\r\n\t\t//打印登录成功信息\r\n        Message.success({message: success.data.msg})\r\n    }\r\n    return success.data;\r\n}, error => {\r\n    if (error.response.status == 504 || error.response.status == 404) {\r\n        Message.error({message: '服务器被吃了( ╯□╰ )'})\r\n    } else if (error.response.status == 403) {\r\n        Message.error({message: '权限不足，请联系管理员'})\r\n    } else if (error.response.status == 401) {\r\n        mymessage.error({message: error.response.data.msg ? error.response.data.msg : '尚未登录，请登录'})\r\n        router.replace('/');\r\n    } else {\r\n        if (error.response.data.msg) {\r\n            Message.error({message: error.response.data.msg})\r\n        } else {\r\n            Message.error({message: '未知错误!'})\r\n        }\r\n    }\r\n    return;\r\n})\r\n\r\nlet base = '';\r\n\r\nexport const postKeyValueRequest = (url, params) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params,\r\n        transformRequest: [function (data) {\r\n            let ret = '';\r\n            for (let i in data) {\r\n                ret += encodeURIComponent(i) + '=' + encodeURIComponent(data[i]) + '&'\r\n            }\r\n            return ret;\r\n        }],\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        }\r\n    });\r\n}\r\nexport const postRequest = (url, params) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\nexport const putRequest = (url, params) => {\r\n    return axios({\r\n        method: 'put',\r\n        url: `${base}${url}`,\r\n        data: params\r\n    })\r\n}\r\nexport const getRequest = (url, params) => {\r\n    return axios({\r\n        method: 'get',\r\n        url: `${base}${url}`,\r\n        params: params\r\n    })\r\n}\r\nexport const deleteRequest = (url, params) => {\r\n    return axios({\r\n        method: 'delete',\r\n        url: `${base}${url}`,\r\n        params: params\r\n    })\r\n}\r\n"]}]}